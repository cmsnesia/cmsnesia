# This workflow will build a docker container, publish it to Azure Container Registry, and deploy it to Azure Kubernetes Service.
#
# To configure this workflow:
#
# 1. Set up the following secrets in your workspace:
#     a. REGISTRY_USERNAME with ACR username
#     b. REGISTRY_PASSWORD with ACR Password
#     c. AZURE_CREDENTIALS with the output of `az ad sp create-for-rbac --sdk-auth`
#
# 2. Change the values for the REGISTRY_NAME, CLUSTER_NAME, CLUSTER_RESOURCE_GROUP and NAMESPACE environment variables (below).

on: [push]

# Environment variables available to all jobs and steps in this workflow
env:
  REGISTRY_NAME: cmsnesiacr
  CLUSTER_NAME: cmsnesia
  CLUSTER_RESOURCE_GROUP: cmsnesia-rg
  NAMESPACE: default

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      # Connect to Azure Container registry (ACR)
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

      # Container build and push to a Azure Container registry (ACR)
      - run: |
          docker build . -t ${{ env.REGISTRY_NAME }}.azurecr.io/ardikars/cmsnesia-web:${{ github.sha }}
          docker push ${{ env.REGISTRY_NAME }}.azurecr.io/ardikars/cmsnesia-web:${{ github.sha }}

      # Set the target Azure Kubernetes Service (AKS) cluster.
      - uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}

      # Create namespace if doesn't exist
      - run: |
          kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -
          echo "${{ secrets.k8s_deployment_base64 }}" | base64 --decode > .k8s/templates/deployment.yaml

      # Create imagepullsecret for Azure Container registry (ACR)
      - uses: azure/k8s-create-secret@v1
        with:
          container-registry-url: ${{ env.REGISTRY_NAME }}.azurecr.io
          container-registry-username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          container-registry-password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}
          secret-name: ${{ env.REGISTRY_NAME }}-registry-connection
          namespace: ${{ env.NAMESPACE }}

      # Deploy app to AKS
      - uses: azure/k8s-deploy@v1
        with:
          manifests: |
            .k8s/templates/deployment.yaml
            .k8s/templates/service.yaml
          images: |
            ${{ env.REGISTRY_NAME }}.azurecr.io/ardikars/cmsnesia-web:${{ github.sha }}
          imagepullsecrets: |
            ${{ env.REGISTRY_NAME }}-registry-connection
          namespace: ${{ env.NAMESPACE }}

      # Deploy artifact to github package registry
      - run: |
          echo "${{ secrets.mvn_settings_base64 }}" | base64 --decode > .mvn/release-settings.xml
          ./mvnw -B -s .mvn/release-settings.xml -pl !cmsnesia-web,!cmsnesia-tests,!cmsnesia-service-spec,!cmsnesia-service-impl,!cmsnesia-domain,!cmsnesia-assembler clean package deploy -DskipTests